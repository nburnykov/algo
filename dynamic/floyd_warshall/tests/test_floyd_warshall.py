from dynamic.floyd_warshall.floyd_warshall import floyd_warshall


def test_floyd_warshall():
    graph = [
        (0, 1, -5),
        (1, 2, -3),
        (3, 1, 4),
        (3, 4, 1),
        (3, 5, 5),
        (3, 6, 10),
        (5, 6, -3),
        (6, 7, 5),
        (7, 5, 6),
        (7, 9, 1),
        (9, 10, 1),
        (10, 8, 4),
        (8, 7, -3)
    ]
    assert set(floyd_warshall(graph)) == {(0, 1), (0, 1, 2), (1, 2), (3, 1), (3, 1, 2), (3, 4), (3, 5), (3, 5, 6),
                                          (3, 5, 6, 7), (3, 5, 6, 7, 9, 10, 8), (3, 5, 6, 7, 9), (3, 5, 6, 7, 9, 10),
                                          (5, 6), (5, 6, 7), (5, 6, 7, 9, 10, 8), (5, 6, 7, 9), (5, 6, 7, 9, 10),
                                          (6, 7, 5), (6, 7), (6, 7, 9, 10, 8), (6, 7, 9), (6, 7, 9, 10), (7, 5),
                                          (7, 5, 6), (7, 9, 10, 8), (7, 9), (7, 9, 10), (8, 7, 5), (8, 7, 5, 6), (8, 7),
                                          (8, 7, 9), (8, 7, 9, 10), (9, 10, 8, 7, 5), (9, 10, 8, 7, 5, 6),
                                          (9, 10, 8, 7), (9, 10, 8), (9, 10), (10, 8, 7, 5), (10, 8, 7, 5, 6),
                                          (10, 8, 7), (10, 8), (10, 8, 7, 9)}


def test_floyd_warshall_cycle():
    graph = [
        (0, 2, 2),
        (1, 0, 4),
        (1, 2, 1),
        (2, 3, 1),
        (3, 1, -5),
        (6, 3, 5),
        (7, 6, 4),
        (4, 7, 2),
        (5, 4, 3),
        (5, 1, 4),
    ]

    assert set(floyd_warshall(graph)) == {(4, 7, 6), (4, 7), (5, 4), (5, 4, 7, 6), (5, 4, 7), (7, 6)}
